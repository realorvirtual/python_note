接口继承：规定子类必须拥有父类的方法。父类只定义了函数，但不具体写上函数的内容，当子类继承这个函数后必须对函数进行具体化才能有效果。
但要是子类不去定义这个函数的话，继承就没有效果，这时候继承跟不继承都没啥区别。而且只是你想着子类必须去具体化父类的方法，实际上子类并没有被限制到，它可以不去具体化这个函数。

如果我想要子类在继承父类之后必须具体化函数（具体化不一定是要写上具体执行的方法，可以用pass带过，这样做的目的是让子类知道你应该重新去写这个函数，但什么时候写没关系）

import abc
class All_file(metaclass=abc.ABCMeta):
    @abc.abstractmethod
    def 函数
    @abc.abstractmethod
    def 函数
如果子类继承了这个父类All_file，那么子类就必须在自己的内部重新写上一遍@abc.abstractmethod下面的这个函数，否者，子类在实例化的时候就会报错。
