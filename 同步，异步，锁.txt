同步锁，递归锁


并发：指系统具有处理多个任务的能力（系统不断切换处理任务，但一个时刻只处理一个任务）
并行：指系统具有同时处理多个任务的能力（一个时刻可以处理多个任务）

同步与异步
同步：当一个进程需要进行IO操作（等待外部数据）的时候，你有两种选择  ------等：同步
                                                                                                            ------不等：异步，去干其他事情，直到收到数据再回来处理

GIL：全局解释锁，同一时刻，只有一个线程被执行。

同步锁：
import threading
lock=threading.Lock() 创建锁（只能同时存在一把锁）

lock.acquire() 获取锁
---
---代码块 （在执行中间代码块的时候cpu不准切换，直到代码块被执行完成为止）
---
lock.release() 释放锁


递归锁：
import threading
r_lock=threading.RLock() 创建锁（可同时存在多把锁，当内部计数器大于1时，其他线程无法获取这把锁）

